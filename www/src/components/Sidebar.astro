---
import { Link } from "@/components/ui/link";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Typography } from "@/components/ui/typography";

import { getSnippets } from "@/lib/snippets";
import { cn } from "@/lib/utils";

const type = Astro.params.type as string;
const snippets = await getSnippets();
const groupedByCategory = Object.groupBy(
  snippets[type]!,
  ({ category }) => category,
);
---

<aside class="h-full overflow-hidden border-r">
  <ScrollArea className="h-full" client:load data-nav>
    {
      Object.entries(groupedByCategory).map(([category, snippets]) => (
        <div class="w-full py-4 px-2">
          <Typography
            className="text-sm select-none pointer-events-none capitalize mb-2 ml-2"
            variant="h6"
          >
            {category}
          </Typography>
          <ul>
            {snippets?.map(({ name }) => (
              <li data-nav-item={name} class="w-full">
                <Link
                  className={cn(
                    "w-full inline-block rounded-md border-transparent border p-2",
                    Astro.params.name === name && "bg-muted text-foreground",
                  )}
                  href={`/${type}/${name}`}
                >
                  {name}
                </Link>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </ScrollArea>
</aside>

<script define:vars={{ name: Astro.params.name }}>
  // const nav = document.querySelector("[data-nav]");

  let scrollTop = 0;

  document.addEventListener("astro:before-swap", () => {
    const nav = document.querySelector("[data-nav]");

    scrollTop = nav.scrollTop;
    console.log(scrollTop);
  });
  // .querySelector(`[data-nav-item=${name}]`)
  // .scrollIntoView({
  //   behavior: "instant",
  //   block: "center",
  //   inline: "center",
  // });
</script>
