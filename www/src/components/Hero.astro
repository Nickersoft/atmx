---
import Logo from "@/components/Logo.astro";

import ArrowRight from "~icons/mdi/arrow-right";
import GitHub from "~icons/mdi/github";

import Link from "./Link.astro";
---

<atmx-waves
  class="fixed pointer-events-none left-0 -bottom-6 inset-x-0 w-screen h-1/2"
></atmx-waves>

<div
  class="container pb-16 absolute inset-0 max-w-2xl mx-auto flex flex-col justify-center items-center gap-8"
>
  <div class="blur-in w-full w-max-[700px]">
    <Logo class="text-foreground glowing" />
  </div>

  <p
    class="animate-in slide-in-from-top-3 fade-in delay-500 fill-mode-both ease-in-out [animation-duration:1.5s] text-center text-lg opacity-85"
  >
    atmx ("atomics") is a collection of copy-and-pastable code snippets that
    help you build JavaScript projects at lightspeed.
  </p>

  <div class="flex flex-col gap-4 lg:flex-row">
    <Link size="lg" href="/getting-started/welcome">
      Get Started <ArrowRight width={16} height={16} className="ml-2" />
    </Link>
    <Link size="lg" variant="outline" href="/getting-started/welcome">
      <GitHub width={16} height={16} className="mr-2" />
      View GitHub
    </Link>
  </div>

  <pre
    class="border-border border rounded-lg text-sm text-muted-foreground px-3 py-1.5"><code>npx atmx init</code></pre>
</div>

<style>
  @keyframes glowing {
    from {
      filter: drop-shadow(0 0 12px theme("textColor.foreground"));
    }

    to {
      filter: drop-shadow(0 0 8px theme("textColor.foreground/0.5"));
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      filter: blur(24px);
      transform: scale(0.9);
    }

    to {
      opacity: 1;
      filter: blur(0);
      transform: scale(1);
    }
  }

  .blur-in {
    animation: fadeIn 2s ease-out;
  }

  .glowing {
    animation: glowing 2.5s infinite alternate ease-in-out;
  }
</style>

<script>
  class Waves extends HTMLElement {
    #canvas: HTMLCanvasElement;
    #ctx: CanvasRenderingContext2D;
    #t: number;

    constructor() {
      super();

      this.#canvas = document.createElement("canvas");

      this.appendChild(this.#canvas);

      this.#canvas.width = this.clientWidth;
      this.#canvas.height = this.clientHeight;

      this.#ctx = this.#canvas.getContext("2d") as CanvasRenderingContext2D;
      this.#t = 0;

      this.#draw();

      window.addEventListener("resize", () => {
        this.#canvas.width = this.clientWidth;
        this.#canvas.height = this.clientHeight;
      });
    }

    #draw() {
      const w = (this.#canvas.width = this.#canvas.clientWidth) / 2;
      const h = (this.#canvas.height = this.#canvas.clientHeight) / 2;

      // ctx.fillRect(0, 0, w * 2, h * 2);
      this.#ctx.fillStyle = "#fff";

      for (let i = 30; i--; ) {
        for (let j = 80; j--; ) {
          const x = j - 40;
          const y =
            4.5 + Math.sin(j / 4 + this.#t / 2) + Math.sin(i / 2 - this.#t) / 2;
          const z = i / 6;

          this.#ctx.beginPath();
          this.#ctx.shadowColor = "#fff";
          this.#ctx.shadowBlur = 10;
          this.#ctx.arc(
            w + (x / z) * 140,
            h / 8 + (y / z) * 180,
            16 / z / z,
            0,
            7,
          );
          this.#ctx.fill();
        }
      }

      this.#t += 1 / 40;

      requestAnimationFrame(this.#draw.bind(this));
    }
  }

  customElements.define("atmx-waves", Waves);
</script>
