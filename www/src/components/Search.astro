---
import { InteractiveSearch } from "./InteractiveSearch";

import SearchIcon from "~icons/mdi/search";

import { getSnippets } from "@/lib/registry/get-snippets";

import KBD from "./KBD.astro";
import {
  expandSnippet,
  getRegistryName,
  SNIPPET_TYPES,
  type SnippetType,
} from "@atmx-org/common";

const snippets = await getSnippets();

let sections = await Promise.all(
  Object.entries(snippets).map(async ([section, snippets]) => ({
    name: getRegistryName(section as SnippetType),
    items: await Promise.all(
      snippets
        .filter((s) => SNIPPET_TYPES.includes(s.type))
        .map(async (snippet) => ({
          name: snippet.name,
          description: await expandSnippet(snippet).then(
            (expanded) => expanded.description,
          ),
          link: snippet.urls.docs,
        })),
    ),
  })),
);

sections = sections.filter((section) => section.items.length > 0);
---

<InteractiveSearch sections={sections} hotkey="k" client:load>
  <SearchIcon width={16} height={16} />
  <span class="flex-1 text-left">Search all utilities</span>
  <KBD>&#8984;K</KBD>
</InteractiveSearch>
