---
import type { GetStaticPaths } from "astro";

import { transformCode } from "@/lib/snippets";

import Code from "@/components/Code.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";

import { Typography } from "@/components/ui/typography";
import { Installation } from "@/components/Installation";
import type { Snippet, SnippetMetadata } from "@/types";

export const getStaticPaths = (async () => {
  console.log(Astro.url);

  const [helpers, hooks] = await Promise.all<Snippet[][]>(
    ["helpers", "hooks"].map((section) =>
      fetch(new URL(`/registry/${section}.json`)).then((res) => res.json()),
    ),
  );

  return Promise.all(
    Object.entries({ helpers, hooks }).map(([section, snippets]) =>
      snippets.map(({ name, urls }) => ({
        params: { section, name },
        props: {
          url: urls.metadata,
        },
      })),
    ),
  ).then((paths) => paths.flat());
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const { description, content } = (await fetch(url as string).then((res) =>
  res.json(),
)) as SnippetMetadata;
---

<BaseLayout>
  <header class="mb-8">
    <Typography variant="h1" className="mb-2">
      {name}
    </Typography>

    <Typography variant="p" className="text-lg" color="muted">
      {description}
    </Typography>
  </header>

  <Typography variant="h2">Installation</Typography>

  <Installation client:load>
    <Typography slot="cli"
      ><Code code={`npx codedex add ${name}`} lang="bash" wrap /></Typography
    >
    <div slot="manual">
      <Typography className="py-4 mb-0">
        Copy and paste the following method into
        <code class="text-muted-foreground">
          @/utils/{name}.tsx:
        </code>
      </Typography>
      <Code code={transformCode(content)} lang="typescript" class="mt-0" />
    </div>
  </Installation>
</BaseLayout>
